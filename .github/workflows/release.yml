name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: npm run build
      - run: npm install pkg@latest -g
      - run: pkg . --targets node18-linux-x64,node18-darwin-x64,node18-darwin-arm64 --output griq
      - name: Rename binaries with OS suffix
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            [ -f griq ] && mv griq griq-ubuntu || echo "griq not found"
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            # Check for x64 and arm64, rename accordingly
            [ -f griq ] && mv griq griq-macos-x64 || echo "griq not found"
            # Note: pkg might not generate a separate arm64 file; adjust if needed
          fi
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Ubuntu Binary
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: griq-ubuntu
          asset_name: griq-ubuntu
          asset_content_type: application/octet-stream
      - name: Upload macOS x64 Binary
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: griq-macos-x64
          asset_name: griq-macos-x64
          asset_content_type: application/octet-stream
      - name: Upload macOS ARM64 Binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: griq-macos-arm64
          asset_name: griq-macos-arm64
          asset_content_type: application/octet-stream