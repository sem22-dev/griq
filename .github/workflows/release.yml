name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - run: npm run build
      - run: npm install pkg@latest -g
      - run: |
          # Debug: List current directory before pkg
          ls -lh
          # Adjust pkg targets based on OS and enable ESM support
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "Building for ubuntu-latest with node18-linux-x64"
            pkg . --targets node18-linux-x64 --output griq --es-modules || { echo "pkg failed"; exit 1; }
          else
            echo "Building for macos-latest with node18-darwin-x64"
            pkg . --targets node18-darwin-x64 --output griq --es-modules || { echo "pkg failed"; exit 1; }
          fi
          # Debug: List files after pkg
          ls -lh
      - name: Rename binaries with OS suffix
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            [ -f griq ] && mv griq griq-ubuntu || { echo "griq not found for ubuntu"; exit 1; }
          else
            [ -f griq ] && mv griq griq-macos-x64 || { echo "griq not found for macos"; exit 1; }
          fi
      - name: Create or Update Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            griq-ubuntu
            griq-macos-x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}