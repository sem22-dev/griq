name: Build, Package, and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0.0, v2.0.0, etc.

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Package for platform
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run package -- --target node18-linux-x64
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run package -- --target node18-macos-x64
          else
            npm run package -- --target node18-win-x64
          fi

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: dist/bin

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/binaries-ubuntu-latest/*
          asset_name: griq-linux-x64
          asset_content_type: application/octet-stream

      - name: Upload macOS binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/binaries-macos-latest/*
          asset_name: griq-macos-x64
          asset_content_type: application/octet-stream

      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/binaries-windows-latest/*
          asset_name: griq-windows-x64.exe
          asset_content_type: application/octet-stream